{"version":3,"sources":["webpack:///./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/js/swiper.esm.bundle.js","webpack:///src/views/Films.vue","webpack:///./src/views/Films.vue?7f27","webpack:///./src/views/Films.vue"],"names":["exports","Swiper$1","Vue","Object","prototype","hasOwnProperty","call","ComponentEvents","ComponentPropNames","SWIPER_INSTANCE_NAME","DEFAULT_CLASSES","freeze","containerClass","wrapperClass","slideClass","SWIPER_EVENTS","__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","_a","kebabcase","string","replace","toLowerCase","handleClickSlideEvent","swiper","event","emit","_b","_c","destroyed","eventPath","composedPath","path","target","slides_1","from","slides","paths","includes","some","item","clickedIndex","reallyIndex","Number","clickedSlide","dataset","swiperSlideIndex","reallyIndexValue","isInteger","ClickSlide","bindSwiperEvents","forEach","eventName","on","args","_i","apply","kebabcaseName","INSTANCE_NAME_KEY","SwiperDirective","getDirectiveByOptions","globalOptions","getStandardisedOptionByAttrs","vnode","key","_d","value","data","attrs","undefined","getSwiperInstanceName","element","binding","arg","id","getSwiperInstance","instanceName","context","getSwipeOptions","getBooleanValueByInput","input","getEventEmiter","handlers","componentOptions","listeners","name","handle","fns","bind","className","indexOf","addEventListener","emitEvent","inserted","swiperOptions","vueContext","Ready","componentUpdated","_e","_f","_g","_h","_j","_k","_l","_m","autoUpdate","AutoUpdate","isLoop","loop","loopDestroy","update","navigation","pagination","render","loopCreate","unbind","autoDestroy","AutoDestroy","initialized","destroy","DeleteInstanceOnDestroy","CleanupStylesOnDestroy","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","staticRenderFns","_compiled","functional","_scopeId","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","__vue_component__","_vm","$createElement","_self","staticClass","click","$event","handleSwiperClick","_t","_v","class","extend","props","defaultOptions","type","required","default","Boolean","computed","swiperInstance","cache","set","get","mounted","initSwiper","activated","updateSwiper","updated","beforeDestroy","$nextTick","destroySwiper","methods","$emit","autoReLoopSwiper","$el","__vue_component__$1","$parent","install","installed","component","directive","Swiper","SwiperSlide","index","defineProperty","f","__webpack_require__","doc","document","body","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","$","selector","els","tempParent","html","trim","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","classes","classList","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","parents","handleEvent","events","dom7LiveListeners","proxyListener","dom7Listeners","off","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parentNode","closest","find","foundElements","found","matchedItems","removeChild","toAdd","keys","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","swiper_esm_bundle_Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","gestures","SwiperClass","eventsListeners","priority","method","onceHandler","f7proxy","eventHandler","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","create","components","use","proto","static","m","installModule","updateSize","width","height","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","visibleSlides","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideProgress","minTranslate","autoHeight","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","runCallbacksOnInit","updateClickedSlide","slideFound","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","swiper_esm_bundle_transition","transitionStart","direction","dir","swiper_esm_bundle_slide","slideTo","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenWidth","screenHeight","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","dummyEventAttached","dummyEventListener","defaults","init","touchEventsTarget","updateOnWindowResize","edgeSwipeDetection","edgeSwipeThreshold","freeMode","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","moveDistance","currentSlideSize","stopIndex","groupSize","ratio","nextEl","prevEl","onScroll","onClick","stopImmediatePropagation","start","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","minRatio","substr","innerHeight","sort","b","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","swiper_esm_bundle_Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","Virtual","force","addSlidesBefore","addSlidesAfter","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isSupported","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","eventsTarged","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","raw","animateSlider","releaseScroll","getTime","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","maxRatio","isScaling","scaleMove","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","slideSelector","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","hideOnClick","isHidden","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","visibilityState","onVisibilityChange","__webpack_exports__","Films","vue_awesome_swiper","TheLogo","directives","filmId","swiperOption","extends_default","vuex_esm","films","all","created","$route","_this","$store","dispatch","then","res","getters","mySwiper","getCoverUrl","views_Films","rawName","expression","film","_s","title","release_date","rt_score","director","producer","description","slot","Component"],"mappings":"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","file":"static/js/1.fb3b0ea67811d2772a7b.js","sourcesContent":["\n/**\n * @file vue-awesome-swiper v4.0.4\n * @copyright Copyright (c) Surmon. All rights reserved.\n * @license Released under the MIT License.\n * @author Surmon <https://github.com/surmon-china>\n */\n\n(function(g,f){typeof exports==='object'&&typeof module!=='undefined'?f(exports,require('swiper'),require('vue')):typeof define==='function'&&define.amd?define(['exports','swiper','vue'],f):(g=g||self,f(g.VueAwesomeSwiper={},g.Swiper,g.Vue));}(this,(function(exports, Swiper$1, Vue){'use strict';Swiper$1=Swiper$1&&Object.prototype.hasOwnProperty.call(Swiper$1,'default')?Swiper$1['default']:Swiper$1;Vue=Vue&&Object.prototype.hasOwnProperty.call(Vue,'default')?Vue['default']:Vue;/**\r\n * @file vue-awesome-swiper\r\n * @module constants\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar SWIPER_COMPONENT_NAME = 'Swiper';\nvar SWIPER_SLIDE_COMPONENT_NAME = 'SwiperSlide';\nvar SWIPER_DIRECTIVE_NAME = 'swiper';\nvar SWIPER_INSTANCE_NAME = '$swiper';\nvar DEFAULT_CLASSES = Object.freeze({\n  containerClass: 'swiper-container',\n  wrapperClass: 'swiper-wrapper',\n  slideClass: 'swiper-slide'\n});\nvar ComponentEvents;\n\n(function (ComponentEvents) {\n  ComponentEvents[\"Ready\"] = \"ready\";\n  ComponentEvents[\"ClickSlide\"] = \"clickSlide\";\n})(ComponentEvents || (ComponentEvents = {}));\n\nvar ComponentPropNames;\n\n(function (ComponentPropNames) {\n  ComponentPropNames[\"AutoUpdate\"] = \"autoUpdate\";\n  ComponentPropNames[\"AutoDestroy\"] = \"autoDestroy\";\n  ComponentPropNames[\"DeleteInstanceOnDestroy\"] = \"deleteInstanceOnDestroy\";\n  ComponentPropNames[\"CleanupStylesOnDestroy\"] = \"cleanupStylesOnDestroy\";\n})(ComponentPropNames || (ComponentPropNames = {})); // https://swiperjs.com/api/#events\n\n\nvar SWIPER_EVENTS = ['init', 'beforeDestroy', 'slideChange', 'slideChangeTransitionStart', 'slideChangeTransitionEnd', 'slideNextTransitionStart', 'slideNextTransitionEnd', 'slidePrevTransitionStart', 'slidePrevTransitionEnd', 'transitionStart', 'transitionEnd', 'touchStart', 'touchMove', 'touchMoveOpposite', 'sliderMove', 'touchEnd', 'click', 'tap', 'doubleTap', 'imagesReady', 'progress', 'reachBeginning', 'reachEnd', 'fromEdge', 'setTranslate', 'setTransition', 'resize', 'observerUpdate', 'beforeLoopFix', 'loopFix'];/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}/**\r\n * @file vue-awesome-swiper\r\n * @module utils\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar kebabcase = function (string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/\\s+/g, '-').toLowerCase();\n};/**\r\n * @file vue-awesome-swiper\r\n * @module event\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar handleClickSlideEvent = function (swiper, event, emit) {\n  var _a, _b, _c;\n\n  if (swiper && !swiper.destroyed) {\n    var eventPath = ((_a = event.composedPath) === null || _a === void 0 ? void 0 : _a.call(event)) || event.path;\n\n    if ((event === null || event === void 0 ? void 0 : event.target) && eventPath) {\n      var slides_1 = Array.from(swiper.slides);\n      var paths = Array.from(eventPath); // Click slide || slide[children]\n\n      if (slides_1.includes(event.target) || paths.some(function (item) {\n        return slides_1.includes(item);\n      })) {\n        var clickedIndex = swiper.clickedIndex;\n        var reallyIndex = Number((_c = (_b = swiper.clickedSlide) === null || _b === void 0 ? void 0 : _b.dataset) === null || _c === void 0 ? void 0 : _c.swiperSlideIndex);\n        var reallyIndexValue = Number.isInteger(reallyIndex) ? reallyIndex : null;\n        emit(ComponentEvents.ClickSlide, clickedIndex, reallyIndexValue);\n        emit(kebabcase(ComponentEvents.ClickSlide), clickedIndex, reallyIndexValue);\n      }\n    }\n  }\n};\nvar bindSwiperEvents = function (swiper, emit) {\n  SWIPER_EVENTS.forEach(function (eventName) {\n    swiper.on(eventName, function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      emit.apply(void 0, __spreadArrays([eventName], args));\n      var kebabcaseName = kebabcase(eventName);\n\n      if (kebabcaseName !== eventName) {\n        emit.apply(void 0, __spreadArrays([kebabcaseName], args));\n      }\n    });\n  });\n};/**\r\n * @file vue-awesome-swiper\r\n * @module directive\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar INSTANCE_NAME_KEY = 'instanceName';\nvar SwiperDirective = getDirectiveByOptions();\nfunction getDirectiveByOptions(globalOptions) {\n  var getStandardisedOptionByAttrs = function (vnode, key) {\n    var _a, _b, _c, _d;\n\n    var value = (_b = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.attrs) === null || _b === void 0 ? void 0 : _b[key];\n    return value !== undefined ? value : (_d = (_c = vnode.data) === null || _c === void 0 ? void 0 : _c.attrs) === null || _d === void 0 ? void 0 : _d[kebabcase(key)];\n  }; // Get swiper instace name in directive\n\n\n  var getSwiperInstanceName = function (element, binding, vnode) {\n    return binding.arg || getStandardisedOptionByAttrs(vnode, INSTANCE_NAME_KEY) || element.id || SWIPER_INSTANCE_NAME;\n  };\n\n  var getSwiperInstance = function (element, binding, vnode) {\n    var instanceName = getSwiperInstanceName(element, binding, vnode);\n    return vnode.context[instanceName] || null;\n  };\n\n  var getSwipeOptions = function (binding) {\n    return binding.value || globalOptions;\n  };\n\n  var getBooleanValueByInput = function (input) {\n    return [true, undefined, null, ''].includes(input);\n  }; // Emit event in Vue directive\n\n\n  var getEventEmiter = function (vnode) {\n    var _a, _b;\n\n    var handlers = ((_a = vnode.data) === null || _a === void 0 ? void 0 : _a.on) || ((_b = vnode.componentOptions) === null || _b === void 0 ? void 0 : _b.listeners);\n    return function (name) {\n      var args = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n\n      var _a;\n\n      var handle = (_a = handlers) === null || _a === void 0 ? void 0 : _a[name];\n\n      if (handle) {\n        handle.fns.apply(handle, args);\n      }\n    };\n  };\n\n  return {\n    // Init\n    bind: function (element, binding, vnode) {\n      // auto class name\n      if (element.className.indexOf(DEFAULT_CLASSES.containerClass) === -1) {\n        element.className += (element.className ? ' ' : '') + DEFAULT_CLASSES.containerClass;\n      } // bind click event\n\n\n      element.addEventListener('click', function (event) {\n        var emitEvent = getEventEmiter(vnode);\n        var swiper = getSwiperInstance(element, binding, vnode);\n        handleClickSlideEvent(swiper, event, emitEvent);\n      });\n    },\n    // DOM inserted\n    inserted: function (element, binding, vnode) {\n      var context = vnode.context;\n      var swiperOptions = getSwipeOptions(binding);\n      var instanceName = getSwiperInstanceName(element, binding, vnode);\n      var emitEvent = getEventEmiter(vnode);\n      var vueContext = context;\n      var swiper = vueContext === null || vueContext === void 0 ? void 0 : vueContext[instanceName]; // Swiper will destroy but not delete instance, when used <keep-alive>\n\n      if (!swiper || swiper.destroyed) {\n        swiper = new Swiper$1(element, swiperOptions);\n        vueContext[instanceName] = swiper;\n        bindSwiperEvents(swiper, emitEvent);\n        emitEvent(ComponentEvents.Ready, swiper); // MARK: Reinstance when the nexttick with <keep-alive>\n        // Vue.nextTick(instancing) | setTimeout(instancing)\n      }\n    },\n    // On options changed or DOM updated\n    componentUpdated: function (element, binding, vnode) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n      var autoUpdate = getStandardisedOptionByAttrs(vnode, ComponentPropNames.AutoUpdate);\n\n      if (getBooleanValueByInput(autoUpdate)) {\n        var swiper = getSwiperInstance(element, binding, vnode);\n\n        if (swiper) {\n          var swiperOptions = getSwipeOptions(binding);\n          var isLoop = swiperOptions.loop;\n\n          if (isLoop) {\n            (_b = (_a = swiper) === null || _a === void 0 ? void 0 : _a.loopDestroy) === null || _b === void 0 ? void 0 : _b.call(_a);\n          }\n\n          (_c = swiper === null || swiper === void 0 ? void 0 : swiper.update) === null || _c === void 0 ? void 0 : _c.call(swiper);\n          (_e = (_d = swiper.navigation) === null || _d === void 0 ? void 0 : _d.update) === null || _e === void 0 ? void 0 : _e.call(_d);\n          (_g = (_f = swiper.pagination) === null || _f === void 0 ? void 0 : _f.render) === null || _g === void 0 ? void 0 : _g.call(_f);\n          (_j = (_h = swiper.pagination) === null || _h === void 0 ? void 0 : _h.update) === null || _j === void 0 ? void 0 : _j.call(_h);\n\n          if (isLoop) {\n            (_l = (_k = swiper) === null || _k === void 0 ? void 0 : _k.loopCreate) === null || _l === void 0 ? void 0 : _l.call(_k);\n            (_m = swiper === null || swiper === void 0 ? void 0 : swiper.update) === null || _m === void 0 ? void 0 : _m.call(swiper);\n          }\n        }\n      }\n    },\n    // Destroy this directive\n    unbind: function (element, binding, vnode) {\n      var _a;\n\n      var autoDestroy = getStandardisedOptionByAttrs(vnode, ComponentPropNames.AutoDestroy);\n\n      if (getBooleanValueByInput(autoDestroy)) {\n        var swiper = getSwiperInstance(element, binding, vnode);\n\n        if (swiper && swiper.initialized) {\n          (_a = swiper === null || swiper === void 0 ? void 0 : swiper.destroy) === null || _a === void 0 ? void 0 : _a.call(swiper, getBooleanValueByInput(getStandardisedOptionByAttrs(vnode, ComponentPropNames.DeleteInstanceOnDestroy)), getBooleanValueByInput(getStandardisedOptionByAttrs(vnode, ComponentPropNames.CleanupStylesOnDestroy)));\n        }\n      }\n    }\n  };\n}var _a;\nvar script = Vue.extend({\n  name: SWIPER_COMPONENT_NAME,\n  props: (_a = {\n    defaultOptions: {\n      type: Object,\n      required: false,\n      default: function () {\n        return {};\n      }\n    },\n    // eslint-disable-next-line vue/require-default-prop\n    options: {\n      type: Object,\n      required: false\n    }\n  }, _a[ComponentPropNames.AutoUpdate] = {\n    type: Boolean,\n    default: true\n  }, // https://github.com/surmon-china/vue-awesome-swiper/pull/550/files\n  _a[ComponentPropNames.AutoDestroy] = {\n    type: Boolean,\n    default: true\n  }, // https://github.com/surmon-china/vue-awesome-swiper/pull/388\n  _a[ComponentPropNames.DeleteInstanceOnDestroy] = {\n    type: Boolean,\n    required: false,\n    default: true\n  }, _a[ComponentPropNames.CleanupStylesOnDestroy] = {\n    type: Boolean,\n    required: false,\n    default: true\n  }, _a),\n  data: function () {\n    var _a;\n\n    return _a = {}, _a[SWIPER_INSTANCE_NAME] = null, _a;\n  },\n  computed: {\n    swiperInstance: {\n      cache: false,\n      set: function (swiper) {\n        this[SWIPER_INSTANCE_NAME] = swiper;\n      },\n      get: function () {\n        return this[SWIPER_INSTANCE_NAME];\n      }\n    },\n    swiperOptions: function () {\n      return this.options || this.defaultOptions;\n    },\n    wrapperClass: function () {\n      return this.swiperOptions.wrapperClass || DEFAULT_CLASSES.wrapperClass;\n    }\n  },\n  mounted: function () {\n    if (!this.swiperInstance) {\n      this.initSwiper();\n    }\n  },\n  // Update swiper when the parent component activated with `keep-alive`.\n  activated: function () {\n    this.updateSwiper();\n  },\n  updated: function () {\n    this.updateSwiper();\n  },\n  beforeDestroy: function () {\n    // https://github.com/surmon-china/vue-awesome-swiper/commit/2924a9d4d3d1cf51c0d46076410b1f804b2b8a43#diff-7f4e0261ac562c0f354cb91a1ca8864f\n    this.$nextTick(this.destroySwiper);\n  },\n  methods: {\n    // Feature: click event\n    handleSwiperClick: function (event) {\n      handleClickSlideEvent(this.swiperInstance, event, this.$emit.bind(this));\n    },\n    autoReLoopSwiper: function () {\n      var _a, _b;\n\n      if (this.swiperInstance && this.swiperOptions.loop) {\n        // https://github.com/surmon-china/vue-awesome-swiper/issues/593\n        // https://github.com/surmon-china/vue-awesome-swiper/issues/544\n        // https://github.com/surmon-china/vue-awesome-swiper/pull/545/files\n        var swiper = this.swiperInstance;\n        (_a = swiper === null || swiper === void 0 ? void 0 : swiper.loopDestroy) === null || _a === void 0 ? void 0 : _a.call(swiper);\n        (_b = swiper === null || swiper === void 0 ? void 0 : swiper.loopCreate) === null || _b === void 0 ? void 0 : _b.call(swiper);\n      }\n    },\n    updateSwiper: function () {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      if (this[ComponentPropNames.AutoUpdate] && this.swiperInstance) {\n        this.autoReLoopSwiper();\n        (_b = (_a = this.swiperInstance) === null || _a === void 0 ? void 0 : _a.update) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.swiperInstance.navigation) === null || _c === void 0 ? void 0 : _c.update) === null || _d === void 0 ? void 0 : _d.call(_c);\n        (_f = (_e = this.swiperInstance.pagination) === null || _e === void 0 ? void 0 : _e.render) === null || _f === void 0 ? void 0 : _f.call(_e);\n        (_h = (_g = this.swiperInstance.pagination) === null || _g === void 0 ? void 0 : _g.update) === null || _h === void 0 ? void 0 : _h.call(_g);\n      }\n    },\n    destroySwiper: function () {\n      var _a, _b;\n\n      if (this[ComponentPropNames.AutoDestroy] && this.swiperInstance) {\n        // https://github.com/surmon-china/vue-awesome-swiper/pull/341\n        // https://github.com/surmon-china/vue-awesome-swiper/issues/340\n        if (this.swiperInstance.initialized) {\n          (_b = (_a = this.swiperInstance) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, this[ComponentPropNames.DeleteInstanceOnDestroy], this[ComponentPropNames.CleanupStylesOnDestroy]);\n        }\n      }\n    },\n    initSwiper: function () {\n      this.swiperInstance = new Swiper$1(this.$el, this.swiperOptions);\n      bindSwiperEvents(this.swiperInstance, this.$emit.bind(this));\n      this.$emit(ComponentEvents.Ready, this.swiperInstance);\n    }\n  }\n});function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}/* script */\nconst __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    staticClass: \"swiper-container\",\n    on: {\n      \"click\": function ($event) {\n        return _vm.handleSwiperClick($event);\n      }\n    }\n  }, [_vm._t(\"parallax-bg\"), _vm._v(\" \"), _c('div', {\n    class: _vm.wrapperClass\n  }, [_vm._t(\"default\")], 2), _vm._v(\" \"), _vm._t(\"pagination\"), _vm._v(\" \"), _vm._t(\"button-prev\"), _vm._v(\" \"), _vm._t(\"button-next\"), _vm._v(\" \"), _vm._t(\"scrollbar\")], 2);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nconst __vue_inject_styles__ = undefined;\n/* scoped */\n\nconst __vue_scope_id__ = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__ = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\n/* style inject shadow dom */\n\nconst __vue_component__ = normalizeComponent({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);var script$1 = Vue.extend({\n  name: SWIPER_SLIDE_COMPONENT_NAME,\n  computed: {\n    slideClass: function () {\n      var _a, _b;\n\n      return ((_b = (_a = this.$parent) === null || _a === void 0 ? void 0 : _a.swiperOptions) === null || _b === void 0 ? void 0 : _b.slideClass) || DEFAULT_CLASSES.slideClass;\n    }\n  },\n  mounted: function () {\n    this.update();\n  },\n  updated: function () {\n    this.update();\n  },\n  methods: {\n    update: function () {\n      var _a, _b;\n\n      (_b = (_a = this.$parent) === null || _a === void 0 ? void 0 : _a.swiperInstance) === null || _b === void 0 ? void 0 : _b.update();\n    }\n  }\n});/* script */\nconst __vue_script__$1 = script$1;\n/* template */\n\nvar __vue_render__$1 = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    class: _vm.slideClass\n  }, [_vm._t(\"default\")], 2);\n};\n\nvar __vue_staticRenderFns__$1 = [];\n/* style */\n\nconst __vue_inject_styles__$1 = undefined;\n/* scoped */\n\nconst __vue_scope_id__$1 = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__$1 = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__$1 = false;\n/* style inject */\n\n/* style inject SSR */\n\n/* style inject shadow dom */\n\nconst __vue_component__$1 = normalizeComponent({\n  render: __vue_render__$1,\n  staticRenderFns: __vue_staticRenderFns__$1\n}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, false, undefined, undefined, undefined);/**\r\n * @file vue-awesome-swiper\r\n * @module entry\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar install = function (Vue, globalOptions) {\n  if (install.installed) return;\n  install.installed = true;\n\n  if (globalOptions) {\n    __vue_component__.options.props.defaultOptions.default = function () {\n      return globalOptions;\n    };\n  }\n\n  Vue.component(SWIPER_COMPONENT_NAME, __vue_component__);\n  Vue.component(SWIPER_SLIDE_COMPONENT_NAME, __vue_component__$1);\n  Vue.directive(SWIPER_DIRECTIVE_NAME, getDirectiveByOptions(globalOptions));\n};\nvar Swiper = __vue_component__;\nvar SwiperSlide = __vue_component__$1;\nvar directive = SwiperDirective;\nvar index = {\n  install: install,\n  directive: directive,\n  Swiper: __vue_component__,\n  SwiperSlide: __vue_component__$1\n};exports.Swiper=Swiper;exports.SwiperSlide=SwiperSlide;exports.default=index;exports.directive=directive;exports.install=install;Object.defineProperty(exports,'__esModule',{value:true});})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js\n// module id = 7QTg\n// module chunks = 1 2","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 5.3.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 29, 2020\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) activeSlides.push(...swiper.visibleSlides);\n    else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) break;\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -translate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\n    const increment = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video, label',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = ((parseFloat(params.stretch) / 100) * slideSize);\n      }\n      let translateY = isHorizontal ? 0 : stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      multipleActiveThumbs: true,\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n//# sourceMappingURL=swiper.esm.bundle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\n  <section>\n    <TheLogo/>\n    <div v-swiper:mySwiper=\"swiperOption\">\n    <div class=\"swiper-wrapper\">\n      <div class=\"swiper-slide\" :key=\"film.id\" v-for=\"film in films\">\n         <section class=\"wrapper\">\n          <div class=\"info-wrapper\">\n            <div class=\"info-left\">\n              <img class=\"cover\"\n                   v-if=\"getCoverUrl(film.id)\"\n                  :src=\"getCoverUrl(film.id)\"/>\n              <div class=\"img-placeholder\"\n                   v-else>\n                <p class=\"img-placeholder--text\">You need to mock the images list at your local.</p>\n              </div>\n            </div>\n            <div class=\"info-right\">\n              <div class=\"title\">{{ film.title }}</div>\n              <div class=\"introduction\">\n                <div class=\"introduction-item\">\n                  <span class=\"item-title\">Release Date</span><span class=\"item-content\">{{ film.release_date }}</span>\n                </div>\n                <div class=\"introduction-item\">\n                  <span class=\"item-title\">Rate Score</span><span class=\"item-content\">{{ film.rt_score }}</span>\n                </div>\n                <div class=\"introduction-item\">\n                  <span class=\"item-title\">Director</span><span class=\"item-content\">{{ film.director }}</span>\n                </div>\n                <div class=\"introduction-item\">\n                  <span class=\"item-title\">Producer</span><span class=\"item-content\">{{ film.producer }}</span>\n                </div>\n              </div>\n              <div class=\"description\">{{ film.description }}</div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n    <div class=\"swiper-button-prev button-color\" slot=\"button-prev\"></div>\n    <div class=\"swiper-button-next button-color\" slot=\"button-next\"></div>\n  </div>\n  </section>\n</template>\n<script>\nimport { mapState } from 'vuex'\nimport { Swiper, SwiperSlide, directive } from 'vue-awesome-swiper'\nimport 'swiper/css/swiper.css'\nimport TheLogo from './common/TheLogo'\nexport default {\n  name: 'Films',\n  components: {\n    Swiper,\n    SwiperSlide,\n    TheLogo\n  },\n  directives: {\n    swiper: directive\n  },\n  data () {\n    return {\n      filmId: '',\n      swiperOption: {\n        autoHeight: true,\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      films: state => state.films.all\n    })\n  },\n  created () {\n    this.filmId = this.$route.query.id || ''\n  },\n  mounted () {\n    this.$store.dispatch('films/getAllFilms')\n      .then(res => {\n        if (this.filmId !== '') {\n          const index = this.$store.getters['films/getIndexById'](this.filmId)\n          this.mySwiper.slideTo(index, 0, false)\n        }\n      })\n    this.$store.dispatch('films/getAllImages')\n  },\n  methods: {\n    getCoverUrl (id) {\n      return this.$store.getters['films/getCoverUrlById'](id)\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n @import '../assets/css/films.scss';\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/Films.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('TheLogo'),_vm._v(\" \"),_c('div',{directives:[{name:\"swiper\",rawName:\"v-swiper:mySwiper\",value:(_vm.swiperOption),expression:\"swiperOption\",arg:\"mySwiper\"}]},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.films),function(film){return _c('div',{key:film.id,staticClass:\"swiper-slide\"},[_c('section',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"info-wrapper\"},[_c('div',{staticClass:\"info-left\"},[(_vm.getCoverUrl(film.id))?_c('img',{staticClass:\"cover\",attrs:{\"src\":_vm.getCoverUrl(film.id)}}):_c('div',{staticClass:\"img-placeholder\"},[_c('p',{staticClass:\"img-placeholder--text\"},[_vm._v(\"You need to mock the images list at your local.\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"info-right\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(film.title))]),_vm._v(\" \"),_c('div',{staticClass:\"introduction\"},[_c('div',{staticClass:\"introduction-item\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"Release Date\")]),_c('span',{staticClass:\"item-content\"},[_vm._v(_vm._s(film.release_date))])]),_vm._v(\" \"),_c('div',{staticClass:\"introduction-item\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"Rate Score\")]),_c('span',{staticClass:\"item-content\"},[_vm._v(_vm._s(film.rt_score))])]),_vm._v(\" \"),_c('div',{staticClass:\"introduction-item\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"Director\")]),_c('span',{staticClass:\"item-content\"},[_vm._v(_vm._s(film.director))])]),_vm._v(\" \"),_c('div',{staticClass:\"introduction-item\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"Producer\")]),_c('span',{staticClass:\"item-content\"},[_vm._v(_vm._s(film.producer))])])]),_vm._v(\" \"),_c('div',{staticClass:\"description\"},[_vm._v(_vm._s(film.description))])])])])])}),0),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-prev button-color\",attrs:{\"slot\":\"button-prev\"},slot:\"button-prev\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next button-color\",attrs:{\"slot\":\"button-next\"},slot:\"button-next\"})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a6dae4a0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Films.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a6dae4a0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Films.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Films.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Films.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a6dae4a0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Films.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a6dae4a0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Films.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}