{"version":3,"sources":["webpack:///src/views/Species.vue","webpack:///./src/views/Species.vue?dac6","webpack:///./src/views/Species.vue","webpack:///./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/js/swiper.esm.bundle.js"],"names":["Species","name","components","TheLogo","Swiper","vue_awesome_swiper","SwiperSlide","directives","swiper","data","swiperOption","autoHeight","navigation","nextEl","prevEl","computed","extends_default","Object","vuex_esm","species","state","all","people","films","mounted","_this","this","$store","dispatch","then","res","methods","getPeople","urls","filterList","getFilms","list","itemName","ids","map","v","URL","pathname","split","filter","includes","id","views_Species","render","_vm","_h","$createElement","_c","_self","_v","staticClass","rawName","value","expression","arg","_l","s","key","_s","classification","eye_colors","hair_colors","index","attrs","slot","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","exports","Swiper$1","Vue","prototype","hasOwnProperty","call","ComponentEvents","ComponentPropNames","SWIPER_INSTANCE_NAME","DEFAULT_CLASSES","freeze","containerClass","wrapperClass","slideClass","SWIPER_EVENTS","__spreadArrays","i","il","arguments","length","r","Array","k","a","j","jl","_a","kebabcase","string","replace","toLowerCase","handleClickSlideEvent","event","emit","_b","destroyed","eventPath","composedPath","path","target","slides_1","from","slides","paths","some","item","clickedIndex","reallyIndex","Number","clickedSlide","dataset","swiperSlideIndex","reallyIndexValue","isInteger","ClickSlide","bindSwiperEvents","forEach","eventName","on","args","_i","apply","kebabcaseName","INSTANCE_NAME_KEY","SwiperDirective","getDirectiveByOptions","globalOptions","getStandardisedOptionByAttrs","vnode","_d","undefined","getSwiperInstanceName","element","binding","getSwiperInstance","instanceName","context","getSwipeOptions","getBooleanValueByInput","input","getEventEmiter","handlers","componentOptions","listeners","handle","fns","bind","className","indexOf","addEventListener","emitEvent","inserted","swiperOptions","vueContext","Ready","componentUpdated","_e","_f","_g","_j","_k","_m","autoUpdate","AutoUpdate","isLoop","loop","loopDestroy","update","pagination","loopCreate","unbind","autoDestroy","AutoDestroy","initialized","destroy","DeleteInstanceOnDestroy","CleanupStylesOnDestroy","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","__vue_component__","click","$event","handleSwiperClick","_t","class","extend","props","defaultOptions","type","required","default","Boolean","swiperInstance","cache","set","get","initSwiper","activated","updateSwiper","updated","beforeDestroy","$nextTick","destroySwiper","$emit","autoReLoopSwiper","$el","__vue_component__$1","$parent","install","installed","component","directive","defineProperty","f","doc","document","body","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","$","selector","els","tempParent","html","trim","toCreate","innerHTML","push","match","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","classes","classList","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","parents","handleEvent","events","dom7LiveListeners","proxyListener","dom7Listeners","off","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parentNode","closest","find","foundElements","found","matchedItems","removeChild","toAdd","keys","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","swiper_esm_bundle_Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","gestures","SwiperClass","eventsListeners","priority","method","onceHandler","f7proxy","eventHandler","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","create","use","proto","static","m","installModule","updateSize","width","height","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","visibleSlides","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","runCallbacksOnInit","updateClickedSlide","slideFound","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","swiper_esm_bundle_transition","transitionStart","direction","dir","swiper_esm_bundle_slide","slideTo","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenWidth","screenHeight","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","dummyEventAttached","dummyEventListener","defaults","init","touchEventsTarget","updateOnWindowResize","edgeSwipeDetection","edgeSwipeThreshold","freeMode","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","moveDistance","currentSlideSize","stopIndex","groupSize","ratio","onScroll","onClick","stopImmediatePropagation","start","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","minRatio","substr","innerHeight","sort","b","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","swiper_esm_bundle_Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","Virtual","force","addSlidesBefore","addSlidesAfter","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isSupported","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","eventsTarged","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","raw","animateSlider","releaseScroll","getTime","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","maxRatio","isScaling","scaleMove","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","slideSelector","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","part","slugify","currentState","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","hideOnClick","isHidden","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","visibilityState","onVisibilityChange"],"mappings":"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","file":"static/js/2.9753b7d98317d944d759.js","sourcesContent":["<template>\n  <section>\n    <TheLogo/>\n    <div class=\"species-wrapper\">\n      <div v-swiper:mySwiper=\"swiperOption\">\n        <div class=\"swiper-wrapper\">\n          <div class=\"swiper-slide\" :key=\"s.id\" v-for=\"s in species\">\n            <div class=\"species-card\">\n              <div class=\"title\">{{ s.name }}</div>\n              <div class=\"introduction\">\n                <div class=\"introduction-item\">\n                  <span class=\"item-title\">Classification</span><span class=\"item-content\">{{ s.classification }}</span>\n                </div>\n                <div class=\"introduction-item\">\n                  <span class=\"item-title\">Eye Colors</span><span class=\"item-content\">{{ s.eye_colors }}</span>\n                </div>\n                <div class=\"introduction-item\">\n                  <span class=\"item-title\">Hair Colors</span><span class=\"item-content\">{{ s.hair_colors }}</span>\n                </div>\n                <div class=\"introduction-item list\">\n                  <span class=\"item-title\">People</span>\n                  <ul>\n                    <li v-for=\"(name, index) in getPeople(s.people)\" :key=\"index\" class=\"item-content\">{{name}}</li>\n                  </ul>\n                  <span class=\"item-title\">Films</span>\n                  <ul>\n                    <li v-for=\"(name, index) in getFilms(s.films)\" :key=\"index\" class=\"item-content\">{{name}}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"swiper-button-prev button-color\" slot=\"button-prev\"></div>\n        <div class=\"swiper-button-next button-color\" slot=\"button-next\"></div>\n      </div>\n    </div>\n  </section>\n</template>\n<script>\nimport { mapState } from 'vuex'\nimport TheLogo from './common/TheLogo'\nimport { Swiper, SwiperSlide, directive } from 'vue-awesome-swiper'\n\nexport default {\n  name: 'Species',\n  components: {\n    TheLogo,\n    Swiper,\n    SwiperSlide\n  },\n  directives: {\n    swiper: directive\n  },\n  data () {\n    return {\n      swiperOption: {\n        autoHeight: true,\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      species: state => state.species.all,\n      people: state => state.people.all,\n      films: state => state.films.all\n    })\n  },\n  mounted () {\n    this.$store.dispatch('species/getSpecies')\n      .then(res => {\n        this.$store.dispatch('films/getAllFilms')\n        this.$store.dispatch('people/getPeople')\n      })\n  },\n  methods: {\n    getPeople (urls) {\n      return this.filterList(urls, this.people, 'name')\n    },\n    getFilms (urls) {\n      return this.filterList(urls, this.films, 'title')\n    },\n    filterList (urls, list, itemName) {\n      const ids = urls.map(v => {\n        const url = new URL(v)\n        return url.pathname.split('/')[2]\n      })\n      return list.filter(v => ids.includes(v.id)).map(v => v[itemName])\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n  @import '../assets/css/species.scss';\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/Species.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('TheLogo'),_vm._v(\" \"),_c('div',{staticClass:\"species-wrapper\"},[_c('div',{directives:[{name:\"swiper\",rawName:\"v-swiper:mySwiper\",value:(_vm.swiperOption),expression:\"swiperOption\",arg:\"mySwiper\"}]},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.species),function(s){return _c('div',{key:s.id,staticClass:\"swiper-slide\"},[_c('div',{staticClass:\"species-card\"},[_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(s.name))]),_vm._v(\" \"),_c('div',{staticClass:\"introduction\"},[_c('div',{staticClass:\"introduction-item\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"Classification\")]),_c('span',{staticClass:\"item-content\"},[_vm._v(_vm._s(s.classification))])]),_vm._v(\" \"),_c('div',{staticClass:\"introduction-item\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"Eye Colors\")]),_c('span',{staticClass:\"item-content\"},[_vm._v(_vm._s(s.eye_colors))])]),_vm._v(\" \"),_c('div',{staticClass:\"introduction-item\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"Hair Colors\")]),_c('span',{staticClass:\"item-content\"},[_vm._v(_vm._s(s.hair_colors))])]),_vm._v(\" \"),_c('div',{staticClass:\"introduction-item list\"},[_c('span',{staticClass:\"item-title\"},[_vm._v(\"People\")]),_vm._v(\" \"),_c('ul',_vm._l((_vm.getPeople(s.people)),function(name,index){return _c('li',{key:index,staticClass:\"item-content\"},[_vm._v(_vm._s(name))])}),0),_vm._v(\" \"),_c('span',{staticClass:\"item-title\"},[_vm._v(\"Films\")]),_vm._v(\" \"),_c('ul',_vm._l((_vm.getFilms(s.films)),function(name,index){return _c('li',{key:index,staticClass:\"item-content\"},[_vm._v(_vm._s(name))])}),0)])])])])}),0),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-prev button-color\",attrs:{\"slot\":\"button-prev\"},slot:\"button-prev\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next button-color\",attrs:{\"slot\":\"button-next\"},slot:\"button-next\"})])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-87d4484a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Species.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-87d4484a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Species.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Species.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Species.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-87d4484a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Species.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-87d4484a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Species.vue\n// module id = null\n// module chunks = ","\n/**\n * @file vue-awesome-swiper v4.0.4\n * @copyright Copyright (c) Surmon. All rights reserved.\n * @license Released under the MIT License.\n * @author Surmon <https://github.com/surmon-china>\n */\n\n(function(g,f){typeof exports==='object'&&typeof module!=='undefined'?f(exports,require('swiper'),require('vue')):typeof define==='function'&&define.amd?define(['exports','swiper','vue'],f):(g=g||self,f(g.VueAwesomeSwiper={},g.Swiper,g.Vue));}(this,(function(exports, Swiper$1, Vue){'use strict';Swiper$1=Swiper$1&&Object.prototype.hasOwnProperty.call(Swiper$1,'default')?Swiper$1['default']:Swiper$1;Vue=Vue&&Object.prototype.hasOwnProperty.call(Vue,'default')?Vue['default']:Vue;/**\r\n * @file vue-awesome-swiper\r\n * @module constants\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar SWIPER_COMPONENT_NAME = 'Swiper';\nvar SWIPER_SLIDE_COMPONENT_NAME = 'SwiperSlide';\nvar SWIPER_DIRECTIVE_NAME = 'swiper';\nvar SWIPER_INSTANCE_NAME = '$swiper';\nvar DEFAULT_CLASSES = Object.freeze({\n  containerClass: 'swiper-container',\n  wrapperClass: 'swiper-wrapper',\n  slideClass: 'swiper-slide'\n});\nvar ComponentEvents;\n\n(function (ComponentEvents) {\n  ComponentEvents[\"Ready\"] = \"ready\";\n  ComponentEvents[\"ClickSlide\"] = \"clickSlide\";\n})(ComponentEvents || (ComponentEvents = {}));\n\nvar ComponentPropNames;\n\n(function (ComponentPropNames) {\n  ComponentPropNames[\"AutoUpdate\"] = \"autoUpdate\";\n  ComponentPropNames[\"AutoDestroy\"] = \"autoDestroy\";\n  ComponentPropNames[\"DeleteInstanceOnDestroy\"] = \"deleteInstanceOnDestroy\";\n  ComponentPropNames[\"CleanupStylesOnDestroy\"] = \"cleanupStylesOnDestroy\";\n})(ComponentPropNames || (ComponentPropNames = {})); // https://swiperjs.com/api/#events\n\n\nvar SWIPER_EVENTS = ['init', 'beforeDestroy', 'slideChange', 'slideChangeTransitionStart', 'slideChangeTransitionEnd', 'slideNextTransitionStart', 'slideNextTransitionEnd', 'slidePrevTransitionStart', 'slidePrevTransitionEnd', 'transitionStart', 'transitionEnd', 'touchStart', 'touchMove', 'touchMoveOpposite', 'sliderMove', 'touchEnd', 'click', 'tap', 'doubleTap', 'imagesReady', 'progress', 'reachBeginning', 'reachEnd', 'fromEdge', 'setTranslate', 'setTransition', 'resize', 'observerUpdate', 'beforeLoopFix', 'loopFix'];/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}/**\r\n * @file vue-awesome-swiper\r\n * @module utils\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar kebabcase = function (string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/\\s+/g, '-').toLowerCase();\n};/**\r\n * @file vue-awesome-swiper\r\n * @module event\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar handleClickSlideEvent = function (swiper, event, emit) {\n  var _a, _b, _c;\n\n  if (swiper && !swiper.destroyed) {\n    var eventPath = ((_a = event.composedPath) === null || _a === void 0 ? void 0 : _a.call(event)) || event.path;\n\n    if ((event === null || event === void 0 ? void 0 : event.target) && eventPath) {\n      var slides_1 = Array.from(swiper.slides);\n      var paths = Array.from(eventPath); // Click slide || slide[children]\n\n      if (slides_1.includes(event.target) || paths.some(function (item) {\n        return slides_1.includes(item);\n      })) {\n        var clickedIndex = swiper.clickedIndex;\n        var reallyIndex = Number((_c = (_b = swiper.clickedSlide) === null || _b === void 0 ? void 0 : _b.dataset) === null || _c === void 0 ? void 0 : _c.swiperSlideIndex);\n        var reallyIndexValue = Number.isInteger(reallyIndex) ? reallyIndex : null;\n        emit(ComponentEvents.ClickSlide, clickedIndex, reallyIndexValue);\n        emit(kebabcase(ComponentEvents.ClickSlide), clickedIndex, reallyIndexValue);\n      }\n    }\n  }\n};\nvar bindSwiperEvents = function (swiper, emit) {\n  SWIPER_EVENTS.forEach(function (eventName) {\n    swiper.on(eventName, function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      emit.apply(void 0, __spreadArrays([eventName], args));\n      var kebabcaseName = kebabcase(eventName);\n\n      if (kebabcaseName !== eventName) {\n        emit.apply(void 0, __spreadArrays([kebabcaseName], args));\n      }\n    });\n  });\n};/**\r\n * @file vue-awesome-swiper\r\n * @module directive\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar INSTANCE_NAME_KEY = 'instanceName';\nvar SwiperDirective = getDirectiveByOptions();\nfunction getDirectiveByOptions(globalOptions) {\n  var getStandardisedOptionByAttrs = function (vnode, key) {\n    var _a, _b, _c, _d;\n\n    var value = (_b = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.attrs) === null || _b === void 0 ? void 0 : _b[key];\n    return value !== undefined ? value : (_d = (_c = vnode.data) === null || _c === void 0 ? void 0 : _c.attrs) === null || _d === void 0 ? void 0 : _d[kebabcase(key)];\n  }; // Get swiper instace name in directive\n\n\n  var getSwiperInstanceName = function (element, binding, vnode) {\n    return binding.arg || getStandardisedOptionByAttrs(vnode, INSTANCE_NAME_KEY) || element.id || SWIPER_INSTANCE_NAME;\n  };\n\n  var getSwiperInstance = function (element, binding, vnode) {\n    var instanceName = getSwiperInstanceName(element, binding, vnode);\n    return vnode.context[instanceName] || null;\n  };\n\n  var getSwipeOptions = function (binding) {\n    return binding.value || globalOptions;\n  };\n\n  var getBooleanValueByInput = function (input) {\n    return [true, undefined, null, ''].includes(input);\n  }; // Emit event in Vue directive\n\n\n  var getEventEmiter = function (vnode) {\n    var _a, _b;\n\n    var handlers = ((_a = vnode.data) === null || _a === void 0 ? void 0 : _a.on) || ((_b = vnode.componentOptions) === null || _b === void 0 ? void 0 : _b.listeners);\n    return function (name) {\n      var args = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n\n      var _a;\n\n      var handle = (_a = handlers) === null || _a === void 0 ? void 0 : _a[name];\n\n      if (handle) {\n        handle.fns.apply(handle, args);\n      }\n    };\n  };\n\n  return {\n    // Init\n    bind: function (element, binding, vnode) {\n      // auto class name\n      if (element.className.indexOf(DEFAULT_CLASSES.containerClass) === -1) {\n        element.className += (element.className ? ' ' : '') + DEFAULT_CLASSES.containerClass;\n      } // bind click event\n\n\n      element.addEventListener('click', function (event) {\n        var emitEvent = getEventEmiter(vnode);\n        var swiper = getSwiperInstance(element, binding, vnode);\n        handleClickSlideEvent(swiper, event, emitEvent);\n      });\n    },\n    // DOM inserted\n    inserted: function (element, binding, vnode) {\n      var context = vnode.context;\n      var swiperOptions = getSwipeOptions(binding);\n      var instanceName = getSwiperInstanceName(element, binding, vnode);\n      var emitEvent = getEventEmiter(vnode);\n      var vueContext = context;\n      var swiper = vueContext === null || vueContext === void 0 ? void 0 : vueContext[instanceName]; // Swiper will destroy but not delete instance, when used <keep-alive>\n\n      if (!swiper || swiper.destroyed) {\n        swiper = new Swiper$1(element, swiperOptions);\n        vueContext[instanceName] = swiper;\n        bindSwiperEvents(swiper, emitEvent);\n        emitEvent(ComponentEvents.Ready, swiper); // MARK: Reinstance when the nexttick with <keep-alive>\n        // Vue.nextTick(instancing) | setTimeout(instancing)\n      }\n    },\n    // On options changed or DOM updated\n    componentUpdated: function (element, binding, vnode) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n      var autoUpdate = getStandardisedOptionByAttrs(vnode, ComponentPropNames.AutoUpdate);\n\n      if (getBooleanValueByInput(autoUpdate)) {\n        var swiper = getSwiperInstance(element, binding, vnode);\n\n        if (swiper) {\n          var swiperOptions = getSwipeOptions(binding);\n          var isLoop = swiperOptions.loop;\n\n          if (isLoop) {\n            (_b = (_a = swiper) === null || _a === void 0 ? void 0 : _a.loopDestroy) === null || _b === void 0 ? void 0 : _b.call(_a);\n          }\n\n          (_c = swiper === null || swiper === void 0 ? void 0 : swiper.update) === null || _c === void 0 ? void 0 : _c.call(swiper);\n          (_e = (_d = swiper.navigation) === null || _d === void 0 ? void 0 : _d.update) === null || _e === void 0 ? void 0 : _e.call(_d);\n          (_g = (_f = swiper.pagination) === null || _f === void 0 ? void 0 : _f.render) === null || _g === void 0 ? void 0 : _g.call(_f);\n          (_j = (_h = swiper.pagination) === null || _h === void 0 ? void 0 : _h.update) === null || _j === void 0 ? void 0 : _j.call(_h);\n\n          if (isLoop) {\n            (_l = (_k = swiper) === null || _k === void 0 ? void 0 : _k.loopCreate) === null || _l === void 0 ? void 0 : _l.call(_k);\n            (_m = swiper === null || swiper === void 0 ? void 0 : swiper.update) === null || _m === void 0 ? void 0 : _m.call(swiper);\n          }\n        }\n      }\n    },\n    // Destroy this directive\n    unbind: function (element, binding, vnode) {\n      var _a;\n\n      var autoDestroy = getStandardisedOptionByAttrs(vnode, ComponentPropNames.AutoDestroy);\n\n      if (getBooleanValueByInput(autoDestroy)) {\n        var swiper = getSwiperInstance(element, binding, vnode);\n\n        if (swiper && swiper.initialized) {\n          (_a = swiper === null || swiper === void 0 ? void 0 : swiper.destroy) === null || _a === void 0 ? void 0 : _a.call(swiper, getBooleanValueByInput(getStandardisedOptionByAttrs(vnode, ComponentPropNames.DeleteInstanceOnDestroy)), getBooleanValueByInput(getStandardisedOptionByAttrs(vnode, ComponentPropNames.CleanupStylesOnDestroy)));\n        }\n      }\n    }\n  };\n}var _a;\nvar script = Vue.extend({\n  name: SWIPER_COMPONENT_NAME,\n  props: (_a = {\n    defaultOptions: {\n      type: Object,\n      required: false,\n      default: function () {\n        return {};\n      }\n    },\n    // eslint-disable-next-line vue/require-default-prop\n    options: {\n      type: Object,\n      required: false\n    }\n  }, _a[ComponentPropNames.AutoUpdate] = {\n    type: Boolean,\n    default: true\n  }, // https://github.com/surmon-china/vue-awesome-swiper/pull/550/files\n  _a[ComponentPropNames.AutoDestroy] = {\n    type: Boolean,\n    default: true\n  }, // https://github.com/surmon-china/vue-awesome-swiper/pull/388\n  _a[ComponentPropNames.DeleteInstanceOnDestroy] = {\n    type: Boolean,\n    required: false,\n    default: true\n  }, _a[ComponentPropNames.CleanupStylesOnDestroy] = {\n    type: Boolean,\n    required: false,\n    default: true\n  }, _a),\n  data: function () {\n    var _a;\n\n    return _a = {}, _a[SWIPER_INSTANCE_NAME] = null, _a;\n  },\n  computed: {\n    swiperInstance: {\n      cache: false,\n      set: function (swiper) {\n        this[SWIPER_INSTANCE_NAME] = swiper;\n      },\n      get: function () {\n        return this[SWIPER_INSTANCE_NAME];\n      }\n    },\n    swiperOptions: function () {\n      return this.options || this.defaultOptions;\n    },\n    wrapperClass: function () {\n      return this.swiperOptions.wrapperClass || DEFAULT_CLASSES.wrapperClass;\n    }\n  },\n  mounted: function () {\n    if (!this.swiperInstance) {\n      this.initSwiper();\n    }\n  },\n  // Update swiper when the parent component activated with `keep-alive`.\n  activated: function () {\n    this.updateSwiper();\n  },\n  updated: function () {\n    this.updateSwiper();\n  },\n  beforeDestroy: function () {\n    // https://github.com/surmon-china/vue-awesome-swiper/commit/2924a9d4d3d1cf51c0d46076410b1f804b2b8a43#diff-7f4e0261ac562c0f354cb91a1ca8864f\n    this.$nextTick(this.destroySwiper);\n  },\n  methods: {\n    // Feature: click event\n    handleSwiperClick: function (event) {\n      handleClickSlideEvent(this.swiperInstance, event, this.$emit.bind(this));\n    },\n    autoReLoopSwiper: function () {\n      var _a, _b;\n\n      if (this.swiperInstance && this.swiperOptions.loop) {\n        // https://github.com/surmon-china/vue-awesome-swiper/issues/593\n        // https://github.com/surmon-china/vue-awesome-swiper/issues/544\n        // https://github.com/surmon-china/vue-awesome-swiper/pull/545/files\n        var swiper = this.swiperInstance;\n        (_a = swiper === null || swiper === void 0 ? void 0 : swiper.loopDestroy) === null || _a === void 0 ? void 0 : _a.call(swiper);\n        (_b = swiper === null || swiper === void 0 ? void 0 : swiper.loopCreate) === null || _b === void 0 ? void 0 : _b.call(swiper);\n      }\n    },\n    updateSwiper: function () {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      if (this[ComponentPropNames.AutoUpdate] && this.swiperInstance) {\n        this.autoReLoopSwiper();\n        (_b = (_a = this.swiperInstance) === null || _a === void 0 ? void 0 : _a.update) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.swiperInstance.navigation) === null || _c === void 0 ? void 0 : _c.update) === null || _d === void 0 ? void 0 : _d.call(_c);\n        (_f = (_e = this.swiperInstance.pagination) === null || _e === void 0 ? void 0 : _e.render) === null || _f === void 0 ? void 0 : _f.call(_e);\n        (_h = (_g = this.swiperInstance.pagination) === null || _g === void 0 ? void 0 : _g.update) === null || _h === void 0 ? void 0 : _h.call(_g);\n      }\n    },\n    destroySwiper: function () {\n      var _a, _b;\n\n      if (this[ComponentPropNames.AutoDestroy] && this.swiperInstance) {\n        // https://github.com/surmon-china/vue-awesome-swiper/pull/341\n        // https://github.com/surmon-china/vue-awesome-swiper/issues/340\n        if (this.swiperInstance.initialized) {\n          (_b = (_a = this.swiperInstance) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, this[ComponentPropNames.DeleteInstanceOnDestroy], this[ComponentPropNames.CleanupStylesOnDestroy]);\n        }\n      }\n    },\n    initSwiper: function () {\n      this.swiperInstance = new Swiper$1(this.$el, this.swiperOptions);\n      bindSwiperEvents(this.swiperInstance, this.$emit.bind(this));\n      this.$emit(ComponentEvents.Ready, this.swiperInstance);\n    }\n  }\n});function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}/* script */\nconst __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    staticClass: \"swiper-container\",\n    on: {\n      \"click\": function ($event) {\n        return _vm.handleSwiperClick($event);\n      }\n    }\n  }, [_vm._t(\"parallax-bg\"), _vm._v(\" \"), _c('div', {\n    class: _vm.wrapperClass\n  }, [_vm._t(\"default\")], 2), _vm._v(\" \"), _vm._t(\"pagination\"), _vm._v(\" \"), _vm._t(\"button-prev\"), _vm._v(\" \"), _vm._t(\"button-next\"), _vm._v(\" \"), _vm._t(\"scrollbar\")], 2);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nconst __vue_inject_styles__ = undefined;\n/* scoped */\n\nconst __vue_scope_id__ = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__ = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\n/* style inject shadow dom */\n\nconst __vue_component__ = normalizeComponent({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);var script$1 = Vue.extend({\n  name: SWIPER_SLIDE_COMPONENT_NAME,\n  computed: {\n    slideClass: function () {\n      var _a, _b;\n\n      return ((_b = (_a = this.$parent) === null || _a === void 0 ? void 0 : _a.swiperOptions) === null || _b === void 0 ? void 0 : _b.slideClass) || DEFAULT_CLASSES.slideClass;\n    }\n  },\n  mounted: function () {\n    this.update();\n  },\n  updated: function () {\n    this.update();\n  },\n  methods: {\n    update: function () {\n      var _a, _b;\n\n      (_b = (_a = this.$parent) === null || _a === void 0 ? void 0 : _a.swiperInstance) === null || _b === void 0 ? void 0 : _b.update();\n    }\n  }\n});/* script */\nconst __vue_script__$1 = script$1;\n/* template */\n\nvar __vue_render__$1 = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    class: _vm.slideClass\n  }, [_vm._t(\"default\")], 2);\n};\n\nvar __vue_staticRenderFns__$1 = [];\n/* style */\n\nconst __vue_inject_styles__$1 = undefined;\n/* scoped */\n\nconst __vue_scope_id__$1 = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__$1 = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__$1 = false;\n/* style inject */\n\n/* style inject SSR */\n\n/* style inject shadow dom */\n\nconst __vue_component__$1 = normalizeComponent({\n  render: __vue_render__$1,\n  staticRenderFns: __vue_staticRenderFns__$1\n}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, false, undefined, undefined, undefined);/**\r\n * @file vue-awesome-swiper\r\n * @module entry\r\n * @author Surmon <https://github.com/surmon-china>\r\n */\nvar install = function (Vue, globalOptions) {\n  if (install.installed) return;\n  install.installed = true;\n\n  if (globalOptions) {\n    __vue_component__.options.props.defaultOptions.default = function () {\n      return globalOptions;\n    };\n  }\n\n  Vue.component(SWIPER_COMPONENT_NAME, __vue_component__);\n  Vue.component(SWIPER_SLIDE_COMPONENT_NAME, __vue_component__$1);\n  Vue.directive(SWIPER_DIRECTIVE_NAME, getDirectiveByOptions(globalOptions));\n};\nvar Swiper = __vue_component__;\nvar SwiperSlide = __vue_component__$1;\nvar directive = SwiperDirective;\nvar index = {\n  install: install,\n  directive: directive,\n  Swiper: __vue_component__,\n  SwiperSlide: __vue_component__$1\n};exports.Swiper=Swiper;exports.SwiperSlide=SwiperSlide;exports.default=index;exports.directive=directive;exports.install=install;Object.defineProperty(exports,'__esModule',{value:true});})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js\n// module id = 7QTg\n// module chunks = 1 2","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 5.3.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 29, 2020\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) activeSlides.push(...swiper.visibleSlides);\n    else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) break;\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -translate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\n    const increment = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video, label',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = ((parseFloat(params.stretch) / 100) * slideSize);\n      }\n      let translateY = isHorizontal ? 0 : stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      multipleActiveThumbs: true,\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n//# sourceMappingURL=swiper.esm.bundle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = "],"sourceRoot":""}